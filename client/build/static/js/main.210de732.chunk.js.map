{"version":3,"sources":["logo.svg","components/ResumeItem/ResumeItem.jsx","components/Resume/Resume.jsx","components/Sketch/Sketch.jsx","components/Home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ResumeItem","props","useState","resumeData","text","image","title","hover","setHover","className","onMouseEnter","onMouseLeave","Resume","items","map","i","RainSketch","p","c1","c2","yoff","splashes","setup","createCanvas","window","innerWidth","y","x","random","width","push","rain","color","limit","length","velocity","this","show","noStroke","fill","ellipse","move","checkOut","height","setGradient","w","h","axis","noFill","inter","c","lerpColor","stroke","line","draw","a","background","beginShape","xoff","noise","vertex","endShape","CLOSE","textSize","textAlign","CENTER","windowResized","resizeCanvas","Sketch","React","createRef","myRef","isRain","setIsRain","lat","setLat","long","setLong","setWeather","hasWeather","setHasWeather","cityName","setCityName","hasCity","setHasCity","useEffect","canvas","p5","current","remove","navigator","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","fetch","then","res","json","dat","context","split","ref","onClick","Home","ReactGA","initialize","pageview","location","pathname","search","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.210de732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from \"react\";\nimport \"./ResumeItem.css\"\n\nexport default function ResumeItem(props) {\n    const [text, setText] = useState(props.resumeData.text);\n    const [image, setImage] = useState(props.resumeData.image);\n    const [title, setTitle] = useState(props.resumeData.title);\n    const [hover, setHover] = useState(false);\n\n    const handleMouseEnter = () => {\n        setHover(true);\n    }\n\n    const handleMouseLeave = () => {\n        setHover(false);\n    }\n    return (\n        <div className={`card ${hover ? \"card-hover\": \"\"}`} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n            {!hover && <span><h3>{text}</h3>\n            <p>{title}</p></span>}\n            {hover && <p>{image}</p>}\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport ResumeItem from \"../ResumeItem/ResumeItem\"\nimport \"./Resume.css\"\nexport default function Resume() {\n    const items_arr = [\n    {\n        text: \"Resume item 1\",\n        image: \"Image 1\",\n        title: \"Title 1\"\n    },\n    {\n        text: \"Resume item 2\",\n        image: \"Image 2\",\n        title: \"Title 2\"\n    },\n    {\n        text: \"Resume item 3\",\n        image: \"Image 3\",\n        title: \"Title 3\"\n    },\n    {\n        text: \"Resume item 4\",\n        image: \"Image 4\",\n        title: \"Title 4\"\n    },\n    {\n        text: \"Resume item 5\",\n        image: \"Image 5\",\n        title: \"Title 5\"\n    },\n    {\n        text: \"Resume item 6\",\n        image: \"Image 6\",\n        title: \"Title 6\"\n    }\n]\n    const [items, setItems] = useState(items_arr);\n    return (\n        <div className=\"card-container\">\n        {items.map((i) => {\n            return <ResumeItem resumeData={i} />\n        })\n        }\n        </div>\n    )\n}","import React, {useEffect, useState} from \"react\";\nimport p5 from \"p5\";\nconst RainSketch = (p) =>  {\n    var yoff = 0.0;\n    const Y_AXIS = 1;\n    const X_AXIS = 2;\n    var splashes = [];\n    var c1, c2;\n\n    p.setup = () => {\n        p.createCanvas(window.innerWidth, 600);\n        var y = 0;\n        var x = 0;\n        for (var i = 0; i < 100; i++) {\n            y = p.random(-800, 0);\n            x = p.random(0, p.width);\n            splashes.push(new rain(x, y));\n        }\n        c1 = p.color(201, 233, 246);\n        c2 = p.color(69, 179, 224);\n    }\n    yoff = 0.0;\n    var limit = 200;\n    p.draw = () => {\n        p.background(255)\n        setGradient(0, 0, p.width / 2, p.height, c1, c2, Y_AXIS);\n        setGradient(p.width / 2, 0, p.width / 2, p.height, c1, c2, Y_AXIS);\n        // let randNum = random(0, 1);\n        // if (randNum <= 0.7) {\n        //   let r = random(10, 30);\n        //   let x = random(0, width);\n        //   let y = random(0, height);\n        //   splashes.push(new splash(r, x, y));\n        // }\n        for (var a in splashes) {\n            splashes[a].show()\n            splashes[a].move()\n            splashes[a].checkOut()\n            // if (splashes[a].checkOut()) {\n            //   splashes.pop(a);\n            // }\n        }\n        p.fill(0, 119, 190, 200);\n        // We are going to draw a polygon out of the wave points\n        p.beginShape();\n\n        let xoff = 0; // Option #1: 2D Noise\n        // let xoff = yoff; // Option #2: 1D Noise\n\n        // Iterate over horizontal pixels\n        for (let x = 0; x <= p.width; x += 30) {\n            // Calculate a y value according to noise, map to\n\n            // Option #1: 2D Noise\n            let y = p.map(p.noise(xoff, yoff), 0, 1, p.height - limit, p.height);\n\n            // Option #2: 1D Noise\n            // let y = map(noise(xoff), 0, 1, 200,300);\n\n            // Set the vertex\n            p.vertex(x, y);\n            // Increment x dimension for noise\n            xoff += 0.05;\n            limit += 0.002;\n            if (limit >= p.height / 2) {\n            limit = 200;\n            }\n        }\n        // increment y dimension for noise\n        yoff += 0.01;\n        p.vertex(p.width, p.height);\n        p.vertex(0, p.height);\n        p.endShape(p.CLOSE);\n        p.textSize(42);\n        p.textAlign(p.CENTER);\n        p.fill(255);\n        p.text(\"Samyak Kumar\", window.innerWidth / 2, 300)\n\n    }\n\n    p.windowResized = () => {\n        p.resizeCanvas(window.innerWidth, 600)\n    }\n\n    function rain(x, y){\n        var length= p.random(5, 15);\n        var x = x;\n        var y = y;\n        var velocity = p.map(length, 1, 15, 1, 5);\n        \n        this.show = () => {\n            p.noStroke();\n            p.fill(0, 119, 190, 200)\n            p.ellipse(x, y, 3, length);\n        }\n        \n        this.move = () => {\n          y += velocity;\n          velocity += 0.1;\n        }\n        \n        this.checkOut = () => {\n          if (y >= p.height) {\n            y = p.random(-800, 0);\n          length= p.random(1, 15);\n          velocity = p.map(length, 1, 15, 1, 5);\n          }\n        }\n        \n      }\n\n    function splash(rad, x, y) {\n        var radius = rad;\n        var locx = x;\n        var locy = y;\n        var r = 0;\n        var opacity = 200;\n        this.show = () => {\n          p.strokeWeight(2);\n          p.stroke(0, 119, 190, opacity);\n          p.noFill()\n          p.ellipse(locx, locy, r, r * 1.25);\n          r += 0.5\n          opacity = opacity - 2;\n        }\n        \n        this.checkSplashFinish = () => {\n          return r >= radius || opacity <= 0;\n        }\n      }\n\n    function setGradient(x, y, w, h, c1, c2, axis){\n        p.noFill();\n      \n        if (axis === Y_AXIS) {\n          // Top to bottom gradient\n          for (let i = y; i <= y + h; i++) {\n            let inter = p.map(i, y, y + h, 0, 1);\n            let c = p.lerpColor(c1, c2, inter);\n            p.stroke(c);\n            p.line(x, i, x + w, i);\n          }\n        } else if (axis === X_AXIS) {\n          // Left to right gradient\n          for (let i = x; i <= x + w; i++) {\n            let inter = p.map(i, x, x + w, 0, 1);\n            let c = p.lerpColor(c1, c2, inter);\n            p.stroke(c);\n            p.line(i, y, i, y + h);\n          }\n        }\n      }\n}\n\nexport default function Sketch() {\n    const [myRef, setMyRef] = useState(React.createRef())\n    const [isRain, setIsRain] = useState(true)\n    const [lat, setLat] = useState(33.753746)\n    const [long, setLong] = useState(-84.386330)\n    const [weather, setWeather] = useState(null)\n    const [hasWeather, setHasWeather] = useState(false)\n    const [cityName, setCityName] = useState(\"Atlanta\")\n    const [hasCity, setHasCity] = useState(false)\n    \n\n    \n    // setmyP5(new p5(sketch, myRef.current))\n    useEffect(()=>{\n        if (isRain) {\n            let canvas = new p5(RainSketch, myRef.current)\n            return () => {\n                canvas.remove()\n            }\n        }\n\n        navigator.geolocation.getCurrentPosition((pos) => {\n            if (pos && !hasWeather) {\n                console.log(\"Latitude \" + pos.coords.latitude);\n                setLat(pos.coords.latitude);\n                console.log(\"longitude \" + pos.coords.longitude);\n                setLong(pos.coords.longitude);\n                if (!hasCity) {\n                    fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\" + long + \",\" + lat + \".json?limit=1&access_token=pk.eyJ1Ijoic2FteWFra3VtYXIiLCJhIjoiY2p4a2RsMXQyMDNxaTNybHFjZnRkcXp6eSJ9.vj-Bgp0H-1_OGC6ODQSvCg\")\n                    .then((res) => res.json().then(dat => {\n                    var context = dat[\"features\"];\n                    console.log(context.length)\n                    if (context.length > 0) {\n                        context = dat[\"features\"][0][\"context\"];\n                        for (var i = 0; i < context.length; i++) {\n                            if (\"place\" == context[i][\"id\"].split('.')) {\n                                setCityName(context[i][\"text\"])\n                                console.log(context[i][\"text\"])\n                                setHasCity(true);\n                                break;\n                            }\n                        }\n                    }\n                }))\n                }\n                fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Atlanta\" + \"&appid=8bec09210e082b231bce64431923b596\")\n                .then((res) => res.json().then(dat => {\n                    setWeather(dat[\"weather\"][0][\"description\"])\n                    setHasWeather(true)\n                }))\n            }\n        })\n    })\n    return (\n        <div>\n            <div ref={myRef}>\n\n            </div>\n            <button onClick={() => {setIsRain(!isRain)}}>Toggle Rain</button>\n    {hasCity && <h1>{cityName}</h1>}\n\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport ReactGA from 'react-ga';\nimport Resume from \"../Resume/Resume\";\nimport Sketch from \"../Sketch/Sketch\";\nexport default function Home() {\n    ReactGA.initialize(\"UA-141601792-1\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    const [count, setCount] = useState(0);\n    return(\n        <div>\n            <Sketch />\n            <Resume />\n            \n        </div>\n    )\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport logo from './logo.svg';\nimport Home from \"./components/Home/Home\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n    <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}